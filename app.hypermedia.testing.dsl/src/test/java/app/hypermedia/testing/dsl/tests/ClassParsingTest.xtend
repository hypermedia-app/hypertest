/*
 * generated by Xtext 2.18.0
 */
package app.hypermedia.testing.dsl.tests

import app.hypermedia.testing.dsl.core.ClassBlock
import app.hypermedia.testing.dsl.core.Model
import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import static org.assertj.core.api.Assertions.*

@ExtendWith(InjectionExtension)
@InjectWith(CoreInjectorProvider)
class ClassParsingTest {
    @Inject
    ParseHelper<Model> parseHelper

    @Test
    def void withClass_ParsesName() {
        // when
        val result = parseHelper.parse('''
            With Class "Foo" {

            }
        ''')

        // then
        TestHelpers.assertModelParsedSuccessfully(result)

        val classBlock = result.steps.get(0) as ClassBlock
        assertThat(classBlock.name.value).isEqualTo("Foo")
    }

    @Test
    def void withClass_shouldNotAllowNestingItself() {
        // when
        val result = parseHelper.parse('''
            With Class "Foo" {
                With Class "Bar" {
                }
            }
        ''')

        // then
        TestHelpers.assertModelParsingFailed(result)
    }
}
