/*
 * generated by Xtext 2.18.0
 */
package app.hypermedia.testing.dsl.tests.hydra

import app.hypermedia.testing.dsl.hydra.HydraScenario
import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.^extension.ExtendWith
import static org.assertj.core.api.Assertions.*
import app.hypermedia.testing.dsl.tests.HydraInjectorProvider
import app.hypermedia.testing.dsl.tests.TestHelpers
import app.hypermedia.testing.dsl.hydra.NamespaceDeclaration
import org.junit.jupiter.api.Test

@ExtendWith(InjectionExtension)
@InjectWith(HydraInjectorProvider)
class PrefixParsingTest {
    @Inject extension ParseHelper<HydraScenario>

    @Test
    def void prefix_parsesSuccesfully() {
        // when
        val result = '''
            PREFIX "foaf": <http://xmlns.com/foaf/0.1/>
        '''.parse

        // then
        TestHelpers.assertModelParsedSuccessfully(result)

        val namespaceDeclaration = result.namespaces.get(0) as NamespaceDeclaration
        assertThat(namespaceDeclaration.prefix.value).isEqualTo('foaf')
        assertThat(namespaceDeclaration.namespace).isEqualTo('http://xmlns.com/foaf/0.1/')
    }
}
