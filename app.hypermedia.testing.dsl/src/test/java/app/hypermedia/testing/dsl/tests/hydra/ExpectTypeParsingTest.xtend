/*
 * generated by Xtext 2.18.0
 */
package app.hypermedia.testing.dsl.tests.hydra

import app.hypermedia.testing.dsl.hydra.HydraScenario
import app.hypermedia.testing.dsl.tests.HydraInjectorProvider
import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.^extension.ExtendWith
import org.junit.jupiter.api.Test
import static org.assertj.core.api.Assertions.*
import app.hypermedia.testing.dsl.tests.TestHelpers
import app.hypermedia.testing.dsl.hydra.RdfTypeStatement
import app.hypermedia.testing.dsl.hydra.OperationBlock

@ExtendWith(InjectionExtension)
@InjectWith(HydraInjectorProvider)
class ExpectTypeParsingTest {
    @Inject extension ParseHelper<HydraScenario>

    @Test
    def void prefixedName_termCanContainNonLetterCharacters() {
        // when
        val result = '''
            With Operation <http://example.com/CreateUser> {
                Invoke {
                    Expect Type <http://example.com/NewUser>
                }
            }
        '''.parse

        // then
        TestHelpers.assertModelParsedSuccessfully(result)

        val operation = result.steps.get(0) as OperationBlock
        val expectation = operation.invocations.get(0).response.children.get(0) as RdfTypeStatement
        assertThat(expectation.id.value).isEqualTo('http://example.com/NewUser')
    }
}
