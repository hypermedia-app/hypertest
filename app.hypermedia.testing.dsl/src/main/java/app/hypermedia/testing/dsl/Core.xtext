grammar app.hypermedia.testing.dsl.Core with org.eclipse.xtext.common.Terminals

generate core "http://testing.hypermedia.app/dsl/core"

CoreScenario:
    (steps+=TopLevelStep)*;

TopLevelStep:
	ClassBlock |
	RelaxedLinkBlock;

ResponseStep:
    StatusStatement |
    HeaderStatement |
    RepresentationStep |
    FollowStatement
;

RepresentationStep:
    PropertyBlock |
    PropertyStatement |
    LinkStep
;

LinkStep:
    LinkStatement |
    RelaxedLinkBlock |
    StrictLinkBlock
;

Identifier: value=STRING;
Modifier: WithModifier | ExpectModifier;

ExpectModifier: 'Expect';
WithModifier: 'With';

ClassBlock:
	WithModifier 'Class' name=Identifier '{'
		(classChildren+=RepresentationStep)*
	'}';

PropertyBlock:
    modifier=Modifier 'Property' name=Identifier '{'
        (children+=RepresentationStep)*
    '}'
;

PropertyStatement:
    ExpectModifier 'Property' name=Identifier expectation=(
        IntValue |
        DecimalValue |
        BooleanValue |
        StringValue)?
;

DecimalValue:
    value=DECIMAL
;

BooleanValue:
    value=('true' | 'false')
;

IntValue:
    value=INT
;

StringValue:
    value=STRING
;

StatusStatement:
    ExpectModifier 'Status' status=INT
;

RelaxedLinkBlock:
    WithModifier 'Link' relation=Identifier '{'
        (children+=ResponseStep)*
    '}'
;

StrictLinkBlock:
    ExpectModifier 'Link' relation=Identifier '{'
        (children+=ResponseStep)*
    '}'
;

LinkStatement:
    ExpectModifier 'Link' relation=Identifier
;

HeaderStatement:
    ExpectModifier 'Header' fieldName=FieldName (exactValue=STRING | regex=MatchingRegex | variable=VARIABLE)?
;

MatchingRegex:
    'Matching' pattern=STRING
;

FollowStatement:
    'Follow' variable=VARIABLE
;

RequestBlock:
    {RequestBlock} '{'
        (headers+=RequestHeader)*
        (body=RequestBody)?
    '}'
;

ResponseBlock:
    {ResponseBlock} '{'
        (children+=ResponseStep)*
    '}'
;

RequestBody:
    contents=MULTILINE_BLOCK |
    reference=RequestFileBody
;

RequestFileBody:
    '<<<' path=STRING
;

RequestHeader:
    fieldName=FieldName value=STRING
;

FieldName: (ID | HYPHENATED_NAME);

terminal VARIABLE: '[' ID ']';
terminal HYPHENATED_NAME: ('a'..'z' | 'A'..'Z') ('-' | 'a'..'z' | 'A'..'Z')*;

terminal MULTILINE_BLOCK:
    '```' -> '```'
;

terminal DECIMAL: INT '.' INT;
